package view;

import controller.RegisterMenuController;
import enums.Menu;
import enums.RegisterMenuCommands;

import java.util.Scanner;
import java.util.regex.Matcher;

public class RegisterMenu extends LoginOrRegisterMenu {
    @Override
    public boolean check(String input, Scanner scanner) {
        RegisterMenuController registerMenuController = (RegisterMenuController) Menu.RegisterMenu.getMenuController();
        Matcher matcher;
        if ((matcher = RegisterMenuCommands.REGISTER_USER.getMatcher(input)) != null) {
            registerMenuController.createNewUser(matcher.group("username"), matcher.group("password"),
                    matcher.group("passwordConfirm"), matcher.group("nickname"), matcher.group("email"));
        } else if ((matcher = RegisterMenuCommands.REGISTER_USER_WITH_RANDOM_PASSWORD.getMatcher(input)) != null) {
            registerMenuController.createNewUser(matcher.group("username"), matcher.group("password"),
                    null, matcher.group("nickname"), matcher.group("email"));
        } else return false;
        return true;
    }

    public void alertInvalidUsername() {
        System.err.println("Username entered is not valid.");
    }

    public void alertInvalidEmail() {
        System.err.println("Email entered is not valid.");
    }

    public void alertInvalidPassword() {
        System.err.println("Password entered is not valid");
    }

    public void alertWeakPassword() {
        System.err.println("Password entered is not strong enough.");
    }

    public void alertPasswordConfirmDoesNotMatch() {
        System.err.println("Password entered doesn't match password confirm.");
    }

    /**
     * @param generatedPassword Password that is generated by PRNG that matches {@link enums.SemiRegexes#STRONG_PASSWORD_REGEX}
     * @return code 0 if user accepts the password, 1 if wants to generate another, 2 if wants to return to menu
     */
    public int confirmRandomGeneratedPassword(String generatedPassword) {
        System.out.println("The generated password is:");
        System.out.println(generatedPassword);
        while (true) {
            System.out.println("If you agree with this password, enter 'y', if you want another password enter 'g'," +
                    "and if you want to quit enter 'q'");
            switch (AppView.getAppViewObject().scanner.nextLine().charAt(0)) {
                case 'y':
                case 'x':
                    return 0;
                case 'g':
                case 'n':
                    return 1;
                case 'q':
                    return 2;
            }
        }
    }

    public void alertSuccessfulUserCreation(String nickname, String username) {
        System.out.println("User " + nickname + " with username \"" + username + "\" created successfully.");
    }
}